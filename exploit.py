from Crypto.Util.number import GCD
from pwn import *

context.log_level = "Debug"

remote_ip,port = 'crypto.challenge.bi0s.in','1337'
io = remote(remote_ip,port)

re = lambda : io.recv()
ru = lambda a: io.recvuntil(a)
s  = lambda a: io.send(a)
sl = lambda a: io.sendline(a)

# ------------------------------------------------------

ru("\nEnter the operand vector: ")

sl("0 0 0 0 9 0 0 0 0")
re()
sl('*')
re()
sl('0')

s = ru("\nperform another operation(y/n): ")
sl('y')

ru("\nEnter the operand vector: ")

sl("0")
re()
sl('<')
re()
sl('4')

ru("perform another operation(y/n): ")
sl('n')

# ------------------------------------------------------

ru("\nEnter the operand vector: ")

sl("2 3")
re()
sl('*')
re()
sl('0')

ru("perform another operation(y/n): ")
sl('n')

ru("\n\nchoose(+,-,*,/): ")
sl('+')

ru("\n\nHere you go: ")
hint = int(ru("\n").strip())

ru("This might make it easier: ")
n = int(ru("\n\n").strip())

n = n//hint

payload = "0 "*19 + str(n)

# ------------------------------------------------------

ru("\nEnter the operand vector: ")

sl(payload)
re()
sl('+')
re()
sl('0')

s = ru("\nperform another operation(y/n): ")
sl('y')

ru("\nEnter the operand vector: ")

sl("1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 10")
re()
sl('*')
re()
sl('0')

ru("perform another operation(y/n): ")
sl('y')

sl("0")
re()
sl('<')
re()
sl('19')

# ------------------------------------------------------

ru("perform another operation(y/n): ")
sl('n')

ru("\nEnter the operand vector: ")

sl("0")
re()
sl('>')
re()
sl('-1')

ru("perform another operation(y/n): ")
sl('y')

sl("2")
re()
sl('+')
re()
sl('0')

ru("perform another operation(y/n): ")
sl('y')

sl("0 0 0 0 0 -2")
re()
sl('+')
re()
sl('0')

ru("perform another operation(y/n): ")
sl('n')

ru("\nEnter the operand vector: ")

# ------------------------------------------------------

sl("-9 -9 -9 -9 -9")
re()
sl('+')
re()
sl('0')

ru("perform another operation(y/n): ")
sl('y')

ru("\nEnter the operand vector: ")

sl("-1 -1 -1 -1 -1")
re()
sl('*')
re()
sl('0')

ru("perform another operation(y/n): ")
sl('n')

sl("-9 -9 -9 -9 -9")
re()
sl('+')
re()
sl('0')

ru("perform another operation(y/n): ")
sl('y')

ru("\nEnter the operand vector: ")

sl("-1 -1 -1 -1 -1")
re()
sl('*')
re()
sl('0')

ru("perform another operation(y/n): ")
sl('n')

# ------------------------------------------------------

ru("Here's the flag: ")
flag = re()

print(flag.split(b"\n")[0])
